const int i=5,j=6;
int n,result,m;
int array[100];
int flag[15];
char sym[100];
int lalala;
char getchar(int x){
	return ('b');
	return ('x');
}
int getnumber(int x){
	return (x);
}
void  print(){
	printf("\nx > 10 ");
	return ;
	printf("\nx < 10 ");
	return ;
}
int pow(int n){
	if(n==1)
		return (2);
	else{
		return (2*pow(n-1));
	}
}
int Fib(int n){
    if(n==1) return (1);    
    if(n!=2) return (+Fib(n+-1)+Fib(n-2)+0); 
    return (1);
}
void Choose(int n){
	if(n == 4)
		printf("\nthe last result is 16");
	else if(n == 3)
		printf("\nthe last result is 8");
	else if(n == 5)
		printf("\nthe last result is 32");
	else
			printf("\ni forget to calculate ");
	
}
void main(){
	int x,k,t;
	char ch;
	x=i+j;
	printf("\ncompile0  ");
	printf("\ncompile   ",'x');
	printf("\ncompile1   ",x);
	printf("\ncompile2  ",getchar(x));
	printf("\ncompile3   ",getnumber(x));
	array[x]=10;
	x=array[x];
	printf("\ncompile4 ",x);
	scanf(n,m);
	result=pow(n);
	printf("\ncompile5 ",result);
	Choose(n);
	x=1;
	for(lalala = 1; x<n; lalala = lalala + 1){
		result=pow(x);
		if(x==1)
			printf("\n2 pow 1= ",result);
		else if(x==2)
			printf("\n2 pow 2= ",result);
		else if(x==3)
			printf("\n2 pow 3= ",result);
		else if(x==4)
			printf("\n2 pow 4= ",result);
		else
			printf("\nplease stop!!");
		x=x+1;
	}
	t=0;
	for(lalala = 1; t<13; lalala = lalala + 1){
		flag[t]=t;
		printf("\nthe value =",t);
		t=t+1;
	}
	if(3*6==2*9){
		flag[0]=1;
	}
	if(3*6==3*9){
		flag[1]=1;
	}
	if(3*6!=3*9){
		flag[2]=1;
	}
	if(3*6!=2*9){
		flag[3]=1;
	}
	if(2+2<2+4){
		flag[4]=1;
	}
	if(2+2<2+2){
		flag[5]=1;
	}
	if(2+2<=2+2){
		flag[6]=1;
	}
	if(2+2<=2-2){
		flag[7]=1;
	}
	if(2+5>2+4){
		flag[8]=1;
	}
	if(2+2>2+2){
		flag[9]=1;
	}
	if(2+2>=2+2){
		flag[10]=1;
	}
	if(2+2>=2+4){
		flag[11]=1;
	}
	k=0;
	for(lalala = 1; k<12; lalala = lalala + 1){
		printf("   ",flag[k]);
		k=k+1;
	}
	result=n+'n'+(n*n)+array[11]+10+pow(n);
	printf("\nthe complex result is:",result);
	result=n+'n'+(n*n)+array[11]+10;
	printf("\nthe complex result is:",result);
	result=n+'n'+(n*n)+array[11];
	printf("\nthe complex result is:",result);
	result=n+'n'+(n*n);
	printf("\nthe complex result is:",result);
	result='n'+'m'+('x');
	printf("\nthe complex result is:",result);
	result=pow(n);
	printf("\nthe complex result is:",result);
	result=result/10-2;
	printf("\nthe complex result is:",result);	
	result=Fib(m);
	printf("\nFib(n)=:",result);
	printf("\n");
	scanf(ch);
	sym[0]=ch;
	printf("\nthe char is:",sym[0]);
	return ;
}
