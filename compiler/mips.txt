.data
writechar: .asciiz "write char out of range"
string0: .asciiz " do while "
string1: .asciiz " i j "
string2: .asciiz " "
string3: .asciiz " for "
string4: .asciiz "ok"
.text
move $t9, $sp
subi $fp, $sp, 12

subi $fp, $sp, 12
jal func_main

#program end
li $v0, 10
syscall

# FUNC
func__do_while:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -20($sp)
subi $t8, $sp, 20
subi $fp, $sp, 56



# = 
li $t0, 0
sw $t0, -12($sp)

# WRITE STRING
la $a0, string0
li $v0, 4
syscall

# label
label0:

# = 
li $t0, 0
sw $t0, -16($sp)

# label
label1:

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# WRITE
lw $a0, -4($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string2
li $v0, 4
syscall

# = 
lw $t0, -16($sp)
sw $t0, -8($t8)

# WRITE
lw $a0, -8($t8)
li $v0, 1
syscall

# = 
lw $t0, -16($sp)
sw $t0, -12($t8)

# + - * /
lw $t0, -12($t8)
addi $t2, $t0, 1
sw $t2, -16($t8)

# = 
lw $t0, -16($t8)
sw $t0, -16($sp)

# = 
lw $t0, -16($sp)
sw $t0, -20($t8)

# compare
lw $t0, -20($t8)
blt $t0, 3, label1

# = 
lw $t0, -12($sp)
sw $t0, -24($t8)

# + - * /
lw $t0, -24($t8)
addi $t2, $t0, 1
sw $t2, -28($t8)

# = 
lw $t0, -28($t8)
sw $t0, -12($sp)

# = 
lw $t0, -12($sp)
sw $t0, -32($t8)

# compare
lw $t0, -32($t8)
blt $t0, 3, label0

# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
func__for:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -20($sp)
subi $t8, $sp, 20
subi $fp, $sp, 40



# WRITE STRING
la $a0, string3
li $v0, 4
syscall

# = 
li $t0, 0
sw $t0, -12($sp)

# label
label2:

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# compare
lw $t0, -4($t8)
bge $t0, 3, label3

# = 
li $t0, 0
sw $t0, -16($sp)

# label
label4:

# = 
lw $t0, -16($sp)
sw $t0, -8($t8)

# compare
lw $t0, -8($t8)
bge $t0, 3, label5

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# = 
lw $t0, -12($sp)
sw $t0, -12($t8)

# WRITE
lw $a0, -12($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string2
li $v0, 4
syscall

# = 
lw $t0, -16($sp)
sw $t0, -16($t8)

# WRITE
lw $a0, -16($t8)
li $v0, 1
syscall

# + - * /
lw $t0, -16($sp)
addi $t2, $t0, 1
sw $t2, -16($sp)

# j
j label4

# label
label5:

# + - * /
lw $t0, -12($sp)
addi $t2, $t0, 1
sw $t2, -12($sp)

# j
j label2

# label
label3:

# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
func__if_else:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -24($sp)
subi $t8, $sp, 24
subi $fp, $sp, 44




# = 
li $t0, 2
sw $t0, -12($sp)

# = 
li $t0, 4
sw $t0, -16($sp)

# = 
li $t0, 5
sw $t0, -20($sp)

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# = 
lw $t0, -16($sp)
sw $t0, -8($t8)

# compare
lw $t0, -4($t8)
lw $t1, -8($t8)
bge $t0, $t1, label6

# = 
lw $t0, -12($sp)
sw $t0, -12($t8)

# = 
lw $t0, -20($sp)
sw $t0, -16($t8)

# compare
lw $t0, -12($t8)
lw $t1, -16($t8)
bge $t0, $t1, label7

# WRITE STRING
la $a0, string4
li $v0, 4
syscall

# label
label7:

# label
label6:

# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
func_func:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -12($sp)
subi $t8, $sp, 12
subi $fp, $sp, 16

# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
func_func1:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -12($sp)
subi $t8, $sp, 12
subi $fp, $sp, 16

# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
func_main:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
sw $t8, -12($sp)
subi $t8, $sp, 12
subi $fp, $sp, 16

# call function
jal func__do_while

# call function
jal func__for

# call function
jal func__if_else

# RETURN
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

