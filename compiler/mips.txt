.data
temp: .word 0x7fff0000
writechar: .asciiz "write char out of range"
string0: .asciiz "fun: gbi:"
string1: .asciiz "|"
string2: .asciiz "fun: c:"
string3: .asciiz "fun2: gbinta:"
string4: .asciiz "fun2: c: no such variable|"
string5: .asciiz "fun3: return a|"
string6: .asciiz ","
string7: .asciiz "n1 >= MAX|"
string8: .asciiz "n2 != MIN|"
string9: .asciiz "fun1: gbi:"
string10: .asciiz "n3 <= M_MAX|"
string11: .asciiz "fun3: C1:"
string12: .asciiz "direct:"
string13: .asciiz "n4 <= M_MIN|"
string14: .asciiz "c1 and C1 are not equal.|"
string15: .asciiz "2 is true.|"
string16: .asciiz "0 is true.|"
string17: .asciiz "0 is false.|"
string18: .asciiz "c5 - c1 is true.|"
string19: .asciiz "c5 - c1 is false.|"
.text
lw $t8, temp
move $t9, $sp
subi $fp, $sp, 12

# CONST INT || CONST CHAR
li $t0, 23
sw $t0, -12($sp)
subi $fp, $sp, 16

# CONST INT || CONST CHAR
li $t0, 10
sw $t0, -16($sp)
subi $fp, $sp, 20

# CONST INT || CONST CHAR
li $t0, 43
sw $t0, -20($sp)
subi $fp, $sp, 24

# INT || CHAR
subi $fp, $sp, 424

# INT || CHAR
subi $fp, $sp, 428

# INT || CHAR
subi $fp, $sp, 448

# INT || CHAR
subi $fp, $sp, 452

jal main

#program end
li $v0, 10
syscall

# FUNC
fun:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 52

# PAR INT || PAR CHAR
subi $fp, $sp, 16

# PAR INT || PAR CHAR
subi $fp, $sp, 20

# INT || CHAR
subi $fp, $sp, 24

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# = 
lw $t0, -4($t8)
sw $t0, -424($t9)

# = 
lw $t0, -12($sp)
sw $t0, -8($t8)

# = 
lw $t0, -8($t8)
sw $t0, -20($sp)

# label
label0:

# = 
lw $t0, -20($sp)
sw $t0, -12($t8)

# = 
li $t0, 1
sw $t0, -16($t8)

# + - * /
lw $t0, -12($t8)
lw $t1, -16($t8)
add $t2, $t0, $t1
sw $t2, -20($t8)

# = 
lw $t0, -20($t8)
sw $t0, -20($sp)

# = 
lw $t0, -424($t9)
sw $t0, -24($t8)

# = 
lw $t0, -20($sp)
sw $t0, -28($t8)

# + - * /
lw $t0, -24($t8)
lw $t1, -28($t8)
add $t2, $t0, $t1
sw $t2, -32($t8)

# = 
lw $t0, -32($t8)
sw $t0, -424($t9)

# WRITE STRING
la $a0, string0
li $v0, 4
syscall

# = 
lw $t0, -424($t9)
sw $t0, -36($t8)

# WRITE
lw $a0, -36($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# = 
lw $t0, -20($sp)
sw $t0, -40($t8)

# = 
lw $t0, -12($t9)
sw $t0, -44($t8)

# compare
lw $t0, -40($t8)
lw $t1, -44($t8)
blt $t0, $t1, label0

# WRITE STRING
la $a0, string2
li $v0, 4
syscall

# = 
lw $t0, -16($sp)
sw $t0, -48($t8)

# WRITE
lw $a0, -48($t8)
li $v0, 11
syscall
bge $a0, 128, charlabel0
j charlabel1
charlabel0:
la $a0, writechar
li $v0, 4
syscall
charlabel1:

# WRITE STRING
la $a0, string1
li $v0, 4
syscall


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
fun1:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 40

# PAR INT || PAR CHAR
subi $fp, $sp, 16

# INT || CHAR
subi $fp, $sp, 20

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# = 
lw $t0, -12($t9)
sw $t0, -8($t8)

# compare
lw $t0, -4($t8)
lw $t1, -8($t8)
bge $t0, $t1, label1

# = 
lw $t0, -12($sp)
sw $t0, -12($t8)

# = 
li $t0, 1
sw $t0, -16($t8)

# + - * /
lw $t0, -12($t8)
lw $t1, -16($t8)
add $t2, $t0, $t1
sw $t2, -20($t8)

# real par
lw $t0, -20($t8)
sw $t0, -12($fp)

# call function
jal fun1

# =call
sw $v0, -24($t8)

# = 
lw $t0, -12($sp)
sw $t0, -28($t8)

# + - * /
lw $t0, -24($t8)
lw $t1, -28($t8)
add $t2, $t0, $t1
sw $t2, -32($t8)


# RETURN
lw $t0, -32($t8)
sw $t0, -8($sp)
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# label
label1:

# = 
lw $t0, -12($sp)
sw $t0, -36($t8)


# RETURN
lw $t0, -36($t8)
sw $t0, -8($sp)
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
fun2:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 60

# CONST INT || CONST CHAR
li $t0, 5
sw $t0, -12($sp)
subi $fp, $sp, 16

# INT || CHAR
subi $fp, $sp, 20

# = 
lw $t0, -12($sp)
sw $t0, -4($t8)

# = 
lw $t0, -12($sp)
sw $t0, -8($t8)

# + - * /
lw $t0, -4($t8)
lw $t1, -8($t8)
mul $t2, $t0, $t1
sw $t2, -12($t8)

# = 
lw $t0, -12($sp)
sw $t0, -16($t8)

# + - * /
lw $t0, -12($t8)
lw $t1, -16($t8)
div $t2, $t0, $t1
sw $t2, -20($t8)

# = 
lw $t0, -20($t8)
sw $t0, -424($t9)

# = 
lw $t0, -424($t9)
sw $t0, -24($t8)

# = 
lw $t0, -424($t9)
sw $t0, -28($t8)

# + - * /
lw $t0, -24($t8)
lw $t1, -28($t8)
sub $t2, $t0, $t1
sw $t2, -32($t8)

# = 
lw $t0, -32($t8)
sw $t0, -16($sp)

# label
label2:

# = 
lw $t0, -16($sp)
sw $t0, -36($t8)

# = 
lw $t0, -12($sp)
sw $t0, -40($t8)

# compare
lw $t0, -36($t8)
lw $t1, -40($t8)
bge $t0, $t1, label3

# = 
lw $t0, -16($sp)
sw $t0, -44($t8)

# = 
lw $t0, -16($sp)
sw $t0, -48($t8)

# []=
lw $t0, -48($t8)
lw $t1, -44($t8)
sll $t1,$t1,2
subi $t2, $t9, 24
sub $t2, $t2, $t1
sw $t0, 0($t2)

# WRITE STRING
la $a0, string3
li $v0, 4
syscall

# = 
lw $t0, -16($sp)
sw $t0, -52($t8)

# =[]
lw $t1, -52($t8)
sll $t1,$t1,2
subi $t2, $t9, 24
sub $t2, $t2, $t1
lw $t0, 0($t2)
sw $t0, -56($t8)

# WRITE
lw $a0, -56($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# + - * /
lw $t0, -16($sp)
addi $t2, $t0, 1
sw $t2, -16($sp)

# j
j label2

# label
label3:

# WRITE STRING
la $a0, string4
li $v0, 4
syscall


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
fun3:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 8

# WRITE STRING
la $a0, string5
li $v0, 4
syscall

# = 
li $t0, 97
sw $t0, -4($t8)


# RETURN
lw $t0, -4($t8)
sw $t0, -8($sp)
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
fun4:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 36

# PAR INT || PAR CHAR
subi $fp, $sp, 16

# PAR INT || PAR CHAR
subi $fp, $sp, 20

# INT || CHAR
subi $fp, $sp, 24

# INT || CHAR
subi $fp, $sp, 28

# = 
li $t0, 0
sw $t0, -4($t8)

# = 
lw $t0, -4($t8)
sw $t0, -20($sp)

# label
label4:

# = 
lw $t0, -20($sp)
sw $t0, -8($t8)

# = 
lw $t0, -12($sp)
sw $t0, -12($t8)

# compare
lw $t0, -8($t8)
lw $t1, -12($t8)
bge $t0, $t1, label5

# = 
li $t0, 0
sw $t0, -16($t8)

# = 
lw $t0, -16($t8)
sw $t0, -24($sp)

# label
label6:

# = 
lw $t0, -24($sp)
sw $t0, -20($t8)

# = 
lw $t0, -16($sp)
sw $t0, -24($t8)

# compare
lw $t0, -20($t8)
lw $t1, -24($t8)
bge $t0, $t1, label7

# = 
lw $t0, -20($sp)
sw $t0, -28($t8)

# WRITE
lw $a0, -28($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string6
li $v0, 4
syscall

# = 
lw $t0, -24($sp)
sw $t0, -32($t8)

# WRITE
lw $a0, -32($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# + - * /
lw $t0, -24($sp)
addi $t2, $t0, 1
sw $t2, -24($sp)

# j
j label6

# label
label7:

# + - * /
lw $t0, -20($sp)
addi $t2, $t0, 1
sw $t2, -20($sp)

# j
j label4

# label
label5:


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
fun5:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
sw $t8, 0($s7)
move $t8, $s7
subi $s7, $t8, 56

# INT || CHAR
subi $fp, $sp, 16

# INT || CHAR
subi $fp, $sp, 20

# = 
li $t0, 2
sw $t0, -4($t8)

# = 
li $t0, -5
sw $t0, -8($t8)

# + - * /
lw $t0, -4($t8)
lw $t1, -8($t8)
add $t2, $t0, $t1
sw $t2, -12($t8)

# = 
lw $t0, -12($t8)
sw $t0, -12($sp)

# = 
lw $t0, -12($sp)
sw $t0, -16($t8)

# WRITE
lw $a0, -16($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# = 
li $t0, 97
sw $t0, -20($t8)

# = 
li $t0, 2
sw $t0, -24($t8)

# + - * /
lw $t0, -20($t8)
lw $t1, -24($t8)
mul $t2, $t0, $t1
sw $t2, -28($t8)

# + - * /
lw $t1, -28($t8)
sub $t2, $0, $t1
sw $t2, -32($t8)

# = 
lw $t0, -32($t8)
sw $t0, -12($sp)

# = 
lw $t0, -12($sp)
sw $t0, -36($t8)

# WRITE
lw $a0, -36($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# = 
li $t0, 6
sw $t0, -40($t8)

# = 
li $t0, 4
sw $t0, -44($t8)

# + - * /
lw $t0, -40($t8)
lw $t1, -44($t8)
div $t2, $t0, $t1
sw $t2, -48($t8)

# = 
lw $t0, -48($t8)
sw $t0, -12($sp)

# = 
lw $t0, -12($sp)
sw $t0, -52($t8)

# WRITE
lw $a0, -52($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall


# RETURN
lw $t8, 0($t8)
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

# FUNC
main:
sw $ra, 0($fp)
sw $sp, -4($fp)
move $sp, $fp
subi $fp, $fp, 12
subi $s7, $t8, 124

# CONST INT || CONST CHAR
li $t0, 20
sw $t0, -12($sp)
subi $fp, $sp, 16

# CONST INT || CONST CHAR
li $t0, 10
sw $t0, -16($sp)
subi $fp, $sp, 20

# INT || CHAR
subi $fp, $sp, 24

# INT || CHAR
subi $fp, $sp, 28

# INT || CHAR
subi $fp, $sp, 32

# INT || CHAR
subi $fp, $sp, 36

# INT || CHAR
subi $fp, $sp, 40

# INT || CHAR
subi $fp, $sp, 44

# INT || CHAR
subi $fp, $sp, 48

# INT || CHAR
subi $fp, $sp, 52

# INT || CHAR
subi $fp, $sp, 56

# INT || CHAR
subi $fp, $sp, 60

# INT || CHAR
subi $fp, $sp, 460

# INT || CHAR
subi $fp, $sp, 480

# READ
li $v0, 5
syscall
sw $v0, -20($sp)

# READ
li $v0, 12
syscall
sw $v0, -36($sp)

# READ
li $v0, 5
syscall
sw $v0, -24($sp)

# READ
li $v0, 12
syscall
sw $v0, -40($sp)

# READ
li $v0, 5
syscall
sw $v0, -28($sp)

# READ
li $v0, 12
syscall
sw $v0, -44($sp)

# READ
li $v0, 5
syscall
sw $v0, -32($sp)

# READ
li $v0, 12
syscall
sw $v0, -48($sp)

# READ
li $v0, 12
syscall
sw $v0, -52($sp)

# = 
lw $t0, -20($sp)
sw $t0, -4($t8)

# = 
lw $t0, -12($t9)
sw $t0, -8($t8)

# compare
lw $t0, -4($t8)
lw $t1, -8($t8)
bge $t0, $t1, label8

# = 
lw $t0, -20($sp)
sw $t0, -12($t8)

# = 
lw $t0, -36($sp)
sw $t0, -16($t8)

# real par
lw $t0, -12($t8)
sw $t0, -12($fp)

# real par
lw $t0, -16($t8)
sw $t0, -16($fp)

# call function
jal fun

# j
j label9

# label
label8:

# WRITE STRING
la $a0, string7
li $v0, 4
syscall

# label
label9:

# = 
lw $t0, -24($sp)
sw $t0, -20($t8)

# = 
lw $t0, -16($t9)
sw $t0, -24($t8)

# compare
lw $t0, -20($t8)
lw $t1, -24($t8)
beq $t0, $t1, label10

# WRITE STRING
la $a0, string8
li $v0, 4
syscall

# j
j label11

# label
label10:

# = 
lw $t0, -24($sp)
sw $t0, -28($t8)

# real par
lw $t0, -28($t8)
sw $t0, -12($fp)

# call function
jal fun1

# =call
sw $v0, -32($t8)

# = 
lw $t0, -32($t8)
sw $t0, -424($t9)

# WRITE STRING
la $a0, string9
li $v0, 4
syscall

# = 
lw $t0, -424($t9)
sw $t0, -36($t8)

# WRITE
lw $a0, -36($t8)
li $v0, 1
syscall

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# label
label11:

# = 
lw $t0, -28($sp)
sw $t0, -40($t8)

# = 
lw $t0, -12($sp)
sw $t0, -44($t8)

# compare
lw $t0, -40($t8)
lw $t1, -44($t8)
ble $t0, $t1, label12

# WRITE STRING
la $a0, string10
li $v0, 4
syscall

# j
j label13

# label
label12:

# = 
lw $t0, -28($sp)
sw $t0, -48($t8)

# = 
lw $t0, -44($sp)
sw $t0, -52($t8)

# real par
lw $t0, -48($t8)
sw $t0, -12($fp)

# real par
lw $t0, -52($t8)
sw $t0, -16($fp)

# call function
jal fun

# = 
lw $t0, -28($sp)
sw $t0, -56($t8)

# real par
lw $t0, -56($t8)
sw $t0, -12($fp)

# call function
jal fun1

# label
label13:

# = 
lw $t0, -32($sp)
sw $t0, -60($t8)

# = 
lw $t0, -16($sp)
sw $t0, -64($t8)

# compare
lw $t0, -60($t8)
lw $t1, -64($t8)
blt $t0, $t1, label14

# call function
jal fun3

# =call
sw $v0, -68($t8)

# = 
lw $t0, -68($t8)
sw $t0, -56($sp)

# WRITE STRING
la $a0, string11
li $v0, 4
syscall

# = 
lw $t0, -56($sp)
sw $t0, -72($t8)

# WRITE
lw $a0, -72($t8)
li $v0, 11
syscall
bge $a0, 128, charlabel2
j charlabel3
charlabel2:
la $a0, writechar
li $v0, 4
syscall
charlabel3:

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# WRITE STRING
la $a0, string12
li $v0, 4
syscall

# call function
jal fun3

# =call
sw $v0, -76($t8)

# WRITE
lw $a0, -76($t8)
li $v0, 11
syscall
bge $a0, 128, charlabel4
j charlabel5
charlabel4:
la $a0, writechar
li $v0, 4
syscall
charlabel5:

# WRITE STRING
la $a0, string1
li $v0, 4
syscall

# label
label14:

# = 
lw $t0, -32($sp)
sw $t0, -80($t8)

# = 
lw $t0, -16($sp)
sw $t0, -84($t8)

# compare
lw $t0, -80($t8)
lw $t1, -84($t8)
bgt $t0, $t1, label15

# WRITE STRING
la $a0, string13
li $v0, 4
syscall

# label
label15:

# = 
lw $t0, -36($sp)
sw $t0, -88($t8)

# = 
lw $t0, -56($sp)
sw $t0, -92($t8)

# compare
lw $t0, -88($t8)
lw $t1, -92($t8)
beq $t0, $t1, label16

# WRITE STRING
la $a0, string14
li $v0, 4
syscall

# label
label16:

# = 
li $t0, 2
sw $t0, -96($t8)

# compare
lw $t0, -96($t8)
beq $t0, 0, label17

# WRITE STRING
la $a0, string15
li $v0, 4
syscall

# label
label17:

# = 
li $t0, 0
sw $t0, -100($t8)

# compare
lw $t0, -100($t8)
beq $t0, 0, label18

# WRITE STRING
la $a0, string16
li $v0, 4
syscall

# j
j label19

# label
label18:

# WRITE STRING
la $a0, string17
li $v0, 4
syscall

# label
label19:

# = 
lw $t0, -52($sp)
sw $t0, -104($t8)

# = 
lw $t0, -36($sp)
sw $t0, -108($t8)

# + - * /
lw $t0, -104($t8)
lw $t1, -108($t8)
sub $t2, $t0, $t1
sw $t2, -112($t8)

# compare
lw $t0, -112($t8)
beq $t0, 0, label20

# WRITE STRING
la $a0, string18
li $v0, 4
syscall

# j
j label21

# label
label20:

# WRITE STRING
la $a0, string19
li $v0, 4
syscall

# label
label21:

# call function
jal fun2

# = 
li $t0, 2
sw $t0, -116($t8)

# = 
li $t0, 3
sw $t0, -120($t8)

# real par
lw $t0, -116($t8)
sw $t0, -12($fp)

# real par
lw $t0, -120($t8)
sw $t0, -16($fp)

# call function
jal fun4

# call function
jal fun5


# RETURN
move $fp, $sp
lw $v0, -8($sp)
lw $ra, 0($sp)
lw $sp, -4($sp)
jr $ra

